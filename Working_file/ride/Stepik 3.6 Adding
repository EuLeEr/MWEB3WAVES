{-# STDLIB_VERSION 3 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

@Callable(i)
func purchase(product: String) = {
    let pmt = extract(i.payment)
 #   if !(isDefined(product)) then throw("product not defined") 
    if (isDefined(pmt.assetId)) then throw("can use WAVES only at the moment")
    else {
        let customerAddress = toBase58String(i.caller.bytes)
        let price = match getInteger(this, product) {
            case a:Int => a
            case _ =>  throw("product not defined")
        }
#       if (price == 0) then throw("product not defined")
        if (pmt.amount < price) then throw("purchase amount cannot be less than item price")
        else if (pmt.amount > price) then throw("purchase amount cannot be higher than item price")
        else {
            WriteSet([
                DataEntry("status:purchase_item_A_customer_" + customerAddress, "confirmed"),
                DataEntry("price:purchase_item_A_customer_" + customerAddress, price)
            
            ])
        }
    }
}